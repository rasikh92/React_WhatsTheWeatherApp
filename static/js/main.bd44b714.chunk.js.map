{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/Navigation/NavigationItem/NavigationItem.js","components/List/List.js","components/BigCard/BigCard.js","components/Card/Card.js","components/Spinner/Spinner.js","components/GetTime/GetTime.js","containers/Search/Search.js","components/Footer/Footer.js","containers/Home/Home.js","containers/About/About.js","App.js","serviceWorker.js","store/reducer.js","index.js","assets/Octocat.png"],"names":["jumbotron","props","react_default","a","createElement","className","class","time","withRouter","_useState","useState","_useState2","Object","slicedToArray","hovered","setHovered","toggleHover","type","react_router_dom","to","style","textDecoration","exact","daytype","toLowerCase","join","onMouseEnter","onMouseLeave","icons_Home_default","label","list","onClick","clicked","text","bigCard","results","temp_min","toFixed","temp_max","name","src","icon","alt","temp","desc","humidity","wind_speed","Card","setResults","url","hour","date","useEffect","Axios","get","then","response","newList","firstHour","data","filter","el","parseInt","dt_txt","substring","newDate","Date","toString","weather","catch","err","console","log","map","result","key","dt","main","description","wind","speed","spinner","connect","state","dispatch","onHour","val","onTime","setHour","_useState3","_useState4","setDate","coord","lat","lon","cdate","timestamp","getTime","getTimezoneOffset","_ref","asyncToGenerator","regenerator_default","mark","_callee","offsets","localdate","wrap","_context","prev","next","sent","dstOffset","rawOffset","getHours","getDate","toTimeString","stop","apply","this","arguments","fetchData","components_Card_Card","Spinner_Spinner","Search","touched","submit","firstrun","_this","setState","includes","alert","onChangedHandler","event","preventDefault","persist","target","value","run","onTouchedHandler","onSubmitHandler","_this2","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","_this3","_","debounce","Fragment","placeholder","onChange","Navigation_NavigationItem_NavigationItem","List_List","BigCard_BigCard","components_GetTime_GetTime","Component","footer","href","Img","Home","Jumbotron_Jumbotron","containers_Search_Search","Footer_Footer","About","react_router","path","component","render","containers_About_About","Boolean","window","location","hostname","match","initialState","reducer","length","undefined","action","objectSpread","store","createStore","ReactDOM","es","basename","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"gUAYeA,eATG,SAAAC,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAMK,OAClBJ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAjB,sBACgB,KAAfJ,EAAMM,KACPL,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,wCAAgCH,EAAMM,OAC3C,iEC+BKC,cAlCQ,SAACP,GAAU,IAAAQ,EACIC,oBAAS,GADbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBK,EADmBH,EAAA,GACVI,EADUJ,EAAA,GAEpBK,EAAc,kBAAMD,GAAYD,IAE9C,OAAQZ,EAAAC,EAAAC,cAAA,WACgB,SAAfH,EAAMgB,KACPf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,QAAUC,OAAK,GAChDpB,EAAAC,EAAAC,cAAA,UAAQC,UAAWS,EAAU,CAAC,yBAAyBb,EAAMsB,QAAQC,eAAeC,KAAK,KAAO,iBACxFC,aAAcV,EACdW,aAAcX,GAEdd,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAUE,UAAU,SAJ5B,IAIgDJ,EAAM4B,QAG7C,WAAf5B,EAAMgB,KACAf,EAAAC,EAAAC,cAAA,UAAQC,UAAWS,EAAU,CAAC,gCAAgCb,EAAMsB,QAAQC,eAAeC,KAAK,KAAO,wBAC/FC,aAAcV,EACdW,aAAcX,GAEbf,EAAM4B,OAGvB3B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,GAAG,SAASC,MAAO,CAAEC,eAAgB,SACtCnB,EAAAC,EAAAC,cAAA,UAAQC,UAAWS,EAAU,CAAC,yBAAyBb,EAAMsB,QAAQC,eAAeC,KAAK,KAAO,iBACxFC,aAAcV,EACdW,aAAcX,GAEbf,EAAM4B,WCrBhBC,UARF,SAAA7B,GAAK,OACdC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAO0B,QAAS9B,EAAM+B,SAC/B/B,EAAMgC,2CCcJC,UAjBC,SAAAjC,GACZ,OAAQC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAMK,OAC1BJ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAjB,aAAuCJ,EAAMkC,QAAQC,SAASC,QAAQ,GAAtE,QACAnC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAjB,aAAuCJ,EAAMkC,QAAQG,SAASD,QAAQ,GAAtE,QACAnC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASJ,EAAMkC,QAAQI,MACxCrC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfmC,IAAKvC,EAAMkC,QAAQM,KAAMC,IAAI,YAC7BxC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBJ,EAAMkC,QAAQQ,KAAKN,QAAQ,GAA/D,QACAnC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQJ,EAAMkC,QAAQS,MACvC1C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAjB,aAAuCJ,EAAMkC,QAAQU,SAASR,QAAQ,GAAtE,KACAnC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,eAA2CJ,EAAMkC,QAAQW,WAAzD,WCyDOC,UArEF,SAAA9C,GAAS,IAAAQ,EACYC,mBAAS,IADrBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACX0B,EADWxB,EAAA,GACFqC,EADErC,EAAA,GAIZsC,EAAM,sDAAsDhD,EAAMgC,KAAK,uDACzEiB,EAAOjD,EAAMiD,KACbC,EAAOlD,EAAMkD,KAuCjB,OArCGlD,EAAMiD,KAAO,KACZA,EAAO,EACPC,GAAY,GAGhBC,oBAAU,WACNC,IAAMC,IAAIL,GAAKM,KACX,SAAAC,GACA,IAAI1B,EAAO,GACP2B,EAAU,GAClB,GAAGtB,IAAYL,EAAM,CAMjB,IAAI4B,GALJ5B,EAAO0B,EAASG,KAAK7B,KAAK8B,OAAO,SAAUC,GACvC,OAAOC,SAASD,EAAGE,OAAOC,UAAU,GAAG,MAAQd,GAC/CY,SAASD,EAAGE,OAAOC,UAAU,EAAE,MAASb,KAGvB,GAAGY,OAAOC,UAAU,GAAG,IAAI,SAMhD,IAAI,IAAIlC,KAJR2B,EAAU3B,EAAK8B,OAAO,SAAUC,GAC5B,OAAOA,EAAGE,OAAOC,UAAU,GAAG,MAAQN,IAGjB,CAErB,IAAMO,EAAU,IAAIC,KAAKT,EAAQ3B,GAAMiC,QACvCN,EAAQ3B,GAAMiC,OAASE,EAAQE,WAAWH,UAAU,EAAE,IAEtD,IAAMf,EAAM,oCAAoCQ,EAAQ3B,GAAMsC,QAAQ,GAAG3B,KAAK,OAC9EgB,EAAQ3B,GAAMsC,QAAQ,GAAG3B,KAAOQ,EAGpCD,EAAWS,MAEZY,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MACZ,IAGJpE,EAAAC,EAAAC,cAAA,UACK+B,EAAQsC,IAAI,SAAAC,GACT,OACIxE,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAMK,MAAOqE,IAAKD,EAAOE,IACxC1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAjB,aAAuCqE,EAAOG,KAAKzC,SAASC,QAAQ,GAApE,QACAnC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,aAA4CqE,EAAOG,KAAKvC,SAASD,QAAQ,GAAzE,QACAnC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcqE,EAAOX,QACtC7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWmC,IAAKkC,EAAON,QAAQ,GAAG3B,KAAMC,IAAI,SAC3DxC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAwBqE,EAAOG,KAAKlC,KAAKN,QAAQ,GAAlE,QACAnC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaqE,EAAON,QAAQ,GAAGU,aAChD5E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAjB,aAA4CqE,EAAOG,KAAKhC,SAASR,QAAQ,GAAzE,KACAnC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAjB,eAAgDqE,EAAOK,KAAKC,MAA5D,iDCtDTC,gBARC,kBACZ/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBC2CR6E,cAZS,SAAAC,GACpB,MAAO,CACH5D,QAAS4D,EAAMlD,OAII,SAAAmD,GACvB,MAAO,CACHC,OAAQ,SAACnC,GAAD,OAAUkC,EAAS,CAACnE,KAAM,OAAQqE,IAAKpC,KAC/CqC,OAAQ,SAAChF,GAAD,OAAU6E,EAAS,CAACnE,KAAM,OAAQqE,IAAK/E,OAGxC2E,CA3CC,SAAAjF,GAAS,IAAAQ,EACGC,mBAAS,IADZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdyC,EADcvC,EAAA,GACR6E,EADQ7E,EAAA,GAAA8E,EAEG/E,mBAAS,IAFZgF,EAAA9E,OAAAC,EAAA,EAAAD,CAAA6E,EAAA,GAEdtC,EAFcuC,EAAA,GAERC,EAFQD,EAAA,GAIfE,EAAQ3F,EAAM4F,IAAI,IAAI5F,EAAM6F,IAC5BC,EAAQ,IAAI7B,KACZ8B,EAAaD,EAAME,UAAU,IAAmC,GAA1BF,EAAMG,oBAG5CjD,EAAM,+DACX2C,EAAM,cAAcI,EAAU,+CAkB/B,OAhBA5C,oBAAU,YACS,eAAA+C,EAAAvF,OAAAwF,EAAA,EAAAxF,CAAAyF,EAAAlG,EAAAmG,KAAG,SAAAC,IAAA,IAAA/C,EAAAgD,EAAAC,EAAA,OAAAJ,EAAAlG,EAAAuG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSxD,IAAMJ,GADf,OACRO,EADQmD,EAAAG,KAERN,EAAqC,IAA1BhD,EAASG,KAAKoD,UAA+C,IAA1BvD,EAASG,KAAKqD,UAC9DP,EAAY,IAAIvC,KAAe,IAAV8B,EAAiBQ,GAC1ChB,EAAQiB,EAAUQ,YAClBtB,EAAQc,EAAUS,WAClBjH,EAAMoF,OAAOoB,EAAUQ,YACvBhH,EAAMsF,OAAOkB,EAAUU,eAAenD,UAAU,EAAE,IAPpC,wBAAA2C,EAAAS,SAAAb,MAAH,yBAAAJ,EAAAkB,MAAAC,KAAAC,YAAA,EAUfC,IAEO,IAGK,KAARtE,GAAsB,KAARC,EACtBjD,EAAAC,EAAAC,cAACqH,EAAD,CAAMnH,MAAS,CAAC,OAAOL,EAAMsB,QAAQC,eAAeC,KAAK,KAAMQ,KAAQhC,EAAMgC,KAAMiB,KAAQA,EAAMC,KAAMA,IAAWjD,EAAAC,EAAAC,cAACsH,EAAD,QCtBhHC,6MACFxC,MAAQ,CACJlD,KAAM,GACNE,QAAS,GACTyF,SAAS,EACTC,QAAQ,EACRC,UAAU,KAcdN,UAAY,SAACvE,EAAI6E,GACb,IAAI3F,EAAU,GACdkB,IAAMC,IAAIL,GAAKM,KACX,SAAAC,GACIrB,EAAU,CACN0D,IAAKrC,EAASG,KAAKiC,MAAMC,IACzBC,IAAKtC,EAASG,KAAKiC,MAAME,IACzB1D,SAAUoB,EAASG,KAAKkB,KAAKzC,SAC7BE,SAAUkB,EAASG,KAAKkB,KAAKvC,SAC7BC,KAAMiB,EAASG,KAAKpB,KACpBE,KAAM,oCACEe,EAASG,KAAKS,QAAQ,GAAG3B,KAAK,OACtCE,KAAMa,EAASG,KAAKkB,KAAKlC,KACzBC,KAAMY,EAASG,KAAKS,QAAQ,GAAGU,YAC/BjC,SAAUW,EAASG,KAAKkB,KAAKhC,SAC7BC,WAAYU,EAASG,KAAKoB,KAAKC,OAEnC+C,EAAKC,SAAS,CAAC7F,QAASA,IACxB4F,EAAKC,SAAS,CAAC/F,KAAME,EAAQI,KAAMqF,SAAS,EAAMC,QAAQ,EAAOC,SAAUA,MAEjFzD,MAAM,SAAAC,GACDA,EAAIH,WAAW8D,SAAS,OACvBC,MAAM,sDAGNA,MAAM5D,QAIlB6D,iBAAmB,SAACC,GAIhB,GAHAA,EAAMC,iBACND,EAAME,UACNP,EAAKC,SAAS,CAACF,UAAU,EAAOF,SAAS,IACf,KAAvBQ,EAAMG,OAAOC,QAAiBT,EAAK5C,MAAMyC,QAAS,CASrD,IACM3E,EAAM,qDAAqDmF,EAAMG,OAAOC,MAAM,uDACpFT,EAAKU,IAAIxF,GAAK,OAOlByF,iBAAmB,WACfX,EAAKC,SAAS,CAACJ,SAAS,EAAMC,QAAQ,OAG1Cc,gBAAkB,WACdZ,EAAKC,SAAS,CAACH,QAAQ,wFApEP,IAAAe,EAAAtB,KAChBuB,UAAUC,YAAYC,mBAAmB,SAACC,GACtC,IACM/F,EAAM,uDACZ+F,EAASC,OAAOC,SAAS,QAAQF,EAASC,OAAOE,UAAU,uDAC3DP,EAAKpB,UAAUvE,GAAI,kDAIN,IAAAmG,EAAA9B,KACjBA,KAAKmB,IAAMY,IAAEC,SAAS,SAACrG,GAASmG,EAAK5B,UAAUvE,IAAO,sCA8DtD,OACA/C,EAAAC,EAAAC,cAACF,EAAAC,EAAMoJ,SAAP,KACIrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWiH,KAAKrH,MAAMK,OACvBJ,EAAAC,EAAAC,cAAA,SAAOoJ,YAAY,oBAAoBC,SAAUnC,KAAKa,mBACtDjI,EAAAC,EAAAC,cAACsJ,EAAD,CAAgB7H,MAAM,SAASN,QAAS+F,KAAKrH,MAAMsB,QAASN,KAAK,SAASe,QAASsF,KAAKqB,kBACxFzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQY,KAAK,SACxBf,EAAAC,EAAAC,cAACsJ,EAAD,CAAgBnI,QAAS+F,KAAKrH,MAAMsB,QAASM,MAAM,eAGtC,KAApByF,KAAKnC,MAAMlD,OAAgBqF,KAAKnC,MAAMyC,UAAYN,KAAKnC,MAAM2C,UAC1C,KAApBR,KAAKnC,MAAMlD,OAAgBqF,KAAKnC,MAAM0C,SAAWP,KAAKnC,MAAM2C,SAC5D5H,EAAAC,EAAAC,cAACuJ,EAAD,CAAM1H,KAAMqF,KAAKnC,MAAMlD,KAAMD,QAASsF,KAAKoB,mBAAsB,KAChEpB,KAAKnC,MAAM0C,QAAUP,KAAKnC,MAAMyC,SAC7BN,KAAKnC,MAAM2C,UAAYR,KAAKnC,MAAMyC,QAAU1H,EAAAC,EAAAC,cAACwJ,EAAD,CAAStJ,MAAO,CAAC,UAAUgH,KAAKrH,MAAMsB,QAAQC,eAAeC,KAAK,KAAMU,QAASmF,KAAKnC,MAAMhD,UAAa,KACxJmF,KAAKnC,MAAMyC,SAAWN,KAAKnC,MAAM0C,QAC9BP,KAAKnC,MAAM2C,UAAYR,KAAKnC,MAAMyC,QAAU1H,EAAAC,EAAAC,cAACyJ,EAAD,CAAShE,IAAKyB,KAAKnC,MAAMhD,QAAQ0D,IAAKC,IAAKwB,KAAKnC,MAAMhD,QAAQ2D,IAAK7D,KAAMqF,KAAKnC,MAAMlD,OAAU,aA/FrI6H,aA2GN5E,cANS,SAAAC,GACpB,MAAO,CACH5D,QAAS4D,EAAMlD,OAIRiD,CAAyByC,6BC1GzBoC,EAXA,SAAA9J,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAMK,OAClBJ,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,KAAG4J,KAAK,gDACAzB,OAAO,SACXrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMmC,IAAKyH,IAAKvH,IAAI,mBCDzCwH,mLAEE,OACAhK,EAAAC,EAAAC,cAACF,EAAAC,EAAMoJ,SAAP,KACIrJ,EAAAC,EAAAC,cAAC+J,EAAD,CAAW7J,MAAO,CAAC,YAAYgH,KAAKrH,MAAMsB,QAAQC,eAAeC,KAAK,KAAMlB,KAAM+G,KAAKrH,MAAMM,OAC7FL,EAAAC,EAAAC,cAACgK,EAAD,CAAQ9J,MAAO,CAAC,SAASgH,KAAKrH,MAAMsB,QAAQC,eAAeC,KAAK,OAChEvB,EAAAC,EAAAC,cAACiK,EAAD,CAAQ/J,MAAO,CAAC,SAASgH,KAAKrH,MAAMsB,QAAQC,eAAeC,KAAK,eANzDqI,aAmBJ5E,cAPS,SAAAC,GACpB,MAAO,CACH5D,QAAS4D,EAAMlD,KACf1B,KAAM4E,EAAM5E,OAIL2E,CAAyBgF,GCrBlCI,2LAEE,OACApK,EAAAC,EAAAC,cAACF,EAAAC,EAAMoJ,SAAP,KACIrJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsJ,EAAD,CAAgBnI,QAAS+F,KAAKrH,MAAMsB,QAASM,MAAM,OAAOZ,KAAK,SAE/Df,EAAAC,EAAAC,cAAA,OAAKC,UAAWiH,KAAKrH,MAAMK,OACvBJ,EAAAC,EAAAC,cAAA,4MAMJF,EAAAC,EAAAC,cAACiK,EAAD,CAAQ/J,MAAO,CAAC,SAASgH,KAAKrH,MAAMsB,QAAQC,eAAeC,KAAK,eAjBxDqI,cA6BL5E,cANS,SAAAC,GACpB,MAAO,CACH5D,QAAS4D,EAAMlD,OAIRiD,CAAyBoF,GCTzB9J,cAAW0E,YANF,SAAAC,GACtB,MAAO,CACL5D,QAAS4D,EAAMlD,OAIOiD,CAnBd,SAAAjF,GACV,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAW,CAAC,aAAaJ,EAAMsB,SAASE,KAAK,MACjDvB,EAAAC,EAAAC,cAACmK,EAAA,EAAD,KACErK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,KAAK,IAAIlJ,OAAK,EAACmJ,UAAWP,IACjChK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAOC,KAAK,SAASE,OAAU,kBAAMxK,EAAAC,EAAAC,cAACuK,EAAD,CAAOrK,MAAO,CAAC,QAAQL,EAAMsB,QAAQC,eAAeC,KAAK,gBCDtFmJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+EClBAC,EAAe,CACjBhJ,KAAM,GACN1B,KAAM,IAkCK2K,EA/BC,WAAkC,IAAjC/F,EAAiCoC,UAAA4D,OAAA,QAAAC,IAAA7D,UAAA,GAAAA,UAAA,GAAzB0D,EAAcI,EAAW9D,UAAA4D,OAAA,EAAA5D,UAAA,QAAA6D,EAC9C,OAAOC,EAAOpK,MACV,IAAK,OACL,IAAIM,EAAU,KAcd,OAXQA,EADA8J,EAAO/F,IAAM,GAAK+F,EAAO/F,IAAM,GACrB,UAEN+F,EAAO/F,KAAO,IAAM+F,EAAO/F,KAAO,GAC5B,YAEN+F,EAAO/F,KAAO,IAAM+F,EAAO/F,KAAO,GAC5B,UAGA,QAEX1E,OAAA0K,EAAA,EAAA1K,CAAA,GACAuE,EADP,CAEIlD,KAAMV,IAEV,IAAK,OACL,OAAOX,OAAA0K,EAAA,EAAA1K,CAAA,GACAuE,EADP,CAEI5E,KAAM8K,EAAO/F,MAEjB,QACA,OAAOH,ICtBToG,EAAQC,YAAYN,GAE1BO,IAASf,OAAOxK,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAUH,MAAOA,GACbrL,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAeyK,SAAS,OAAMzL,EAAAC,EAAAC,cAACwL,EAAD,QACrBC,SAASC,eAAe,SFmH/C,kBAAmBjD,WACrBA,UAAUkD,cAAcC,MAAMzI,KAAK,SAAA0I,GACjCA,EAAaC,mCGnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.bd44b714.chunk.js","sourcesContent":["import React from 'react';\nimport './Jumbotron.css';\n\nconst jumbotron = props => (\n    <div className={props.class}>\n        <label className=\"Text\">WhatsTheWeatherApp</label>\n        {props.time !== \"\" ?\n        <label><strong>Current Local Time is: {props.time}</strong></label>\n        : null}\n    </div>\n)\n\nexport default jumbotron;","import React, {useState} from 'react';\nimport './NavigationItem.css';\nimport HomeIcon from '@material-ui/icons/Home';\nimport {NavLink, withRouter} from 'react-router-dom';\n\nconst NavigationItem = (props) => {\n        const [hovered, setHovered] = useState(false);\n        const toggleHover = () => setHovered(!hovered);\n        \nreturn (<nav>\n        {props.type === 'Home' ? \n        <NavLink to=\"/\" style={{ textDecoration: 'none' }} exact>\n                <button className={hovered ? [\"NavigationItem default\",props.daytype.toLowerCase()].join(' ') : \"NavigationItem\"} \n                        onMouseEnter={toggleHover}\n                        onMouseLeave={toggleHover}\n                > \n                        <HomeIcon className=\"icon\"></HomeIcon> {props.label} \n                </button>\n        </NavLink>\n        : props.type === 'Submit' ?\n                <button className={hovered ? [\"NavigationItem Button default\",props.daytype.toLowerCase()].join(' ') : \"NavigationItem Button\"} \n                        onMouseEnter={toggleHover}\n                        onMouseLeave={toggleHover}\n                > \n                        {props.label} \n                </button>\n        :\n        <NavLink to=\"/about\" style={{ textDecoration: 'none' }}>\n                <button className={hovered ? [\"NavigationItem default\",props.daytype.toLowerCase()].join(' ') : \"NavigationItem\"} \n                        onMouseEnter={toggleHover}\n                        onMouseLeave={toggleHover}\n                >\n                        {props.label} \n                </button>\n        </NavLink>\n        }\n</nav>)\n}\n\nexport default withRouter(NavigationItem);","import React from 'react';\nimport './List.css';\n\nconst list = props => (\n    <ul className=\"ul\">\n        <li className=\"List\" onClick={props.clicked}>\n            {props.text}\n        </li>\n    </ul>\n)\n\nexport default list;","import React from 'react';\nimport './BigCard.css';\n\nconst bigCard = props => {\n    return (<div className={props.class}>\n        <label className=\"min-temp\">Min Temp: {props.results.temp_min.toFixed(0)}&deg;</label>\n        <label className=\"max-temp\">Max Temp: {props.results.temp_max.toFixed(0)}&deg;</label>\n        <br></br>\n        <label className=\"title\">{props.results.name}</label>\n        <br></br>\n        <img className=\"img-weather\" \n        src={props.results.icon} alt=\"BigCard\"></img>\n        <label className=\"current-weather\">{props.results.temp.toFixed(0)}&deg;</label>\n        <label className=\"desc\">{props.results.desc}</label>\n        <br></br>\n        <label className=\"humidity\">Humidity: {props.results.humidity.toFixed(0)}%</label>\n        <label className=\"wind-speed\">Wind Speed: {props.results.wind_speed} m/s</label>\n    </div>)\n}\n\nexport default bigCard;","import React, {useState, useEffect} from 'react';\nimport './Card.css';\nimport Axios from 'axios';\n\nconst Card = props => {\n    const [results, setResults] = useState([]);\n\n    const apiKey = '23ae9231000a3683d24bd17fbf104be3';\n    const url = 'https://api.openweathermap.org/data/2.5/forecast?q='+props.text+'&units=metric'+'&appid='+apiKey \n    let hour = props.hour;\n    let date = props.date;\n\n    if(props.hour > 21) {\n        hour = 0;\n        date = date+1;\n    }\n\n    useEffect(() => { \n        Axios.get(url).then(   \n            response => {\n            let list = [];\n            let newList = [];\n        if(results !== list) {\n            list = response.data.list.filter(function (el) {\n                return parseInt(el.dt_txt.substring(11,13)) >= hour &&\n                parseInt(el.dt_txt.substring(8,10)) >=  date\n            })\n\n            let firstHour = list[0].dt_txt.substring(11,13)+\":00:00\";\n            \n            newList = list.filter(function (el) {\n                return el.dt_txt.substring(11,19) === firstHour;\n            })\n\n            for(let list in newList) {\n                //setup date\n                const newDate = new Date(newList[list].dt_txt);\n                newList[list].dt_txt = newDate.toString().substring(0,10);\n                //setup icon\n                const url = \"https://openweathermap.org/img/w/\"+newList[list].weather[0].icon+\".png\";\n                newList[list].weather[0].icon = url;\n            }\n            \n            setResults(newList);\n        }\n        }).catch(err => {\n            console.log(err);\n        })},[])\n\n    return (\n        <ul>\n            {results.map(result => {\n                return (\n                    <li className={props.class} key={result.dt}>\n                    <div className=\"slider\">\n                        <label className=\"min-temp\">Min Temp: {result.main.temp_min.toFixed(0)}&deg;</label>\n                        <label className=\"card-max-temp\">Max Temp: {result.main.temp_max.toFixed(0)}&deg;</label>\n                        <br></br>\n                        <br></br>\n                        <label className=\"card-title\">{result.dt_txt}</label>\n                        <img className=\"card-img\" src={result.weather[0].icon} alt=\"Card\"></img>\n                        <label className=\"card-current-weather\">{result.main.temp.toFixed(0)}&deg;</label>\n                        <label className=\"card-desc\">{result.weather[0].description}</label>\n                        <br></br>\n                        <label className=\"card-humidity\">Humidity: {result.main.humidity.toFixed(0)}%</label>\n                        <label className=\"card-wind-speed\">Wind Speed: {result.wind.speed} m/s</label>\n                    </div>\n                    </li>)\n            })}\n        </ul>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"spinner\">\n        <div className=\"bounce1\"></div>\n        <div className=\"bounce2\"></div>\n        <div className=\"bounce3\"></div>\n    </div>\n)\n\nexport default spinner;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport { async } from 'q';\nimport Card from '../Card/Card';\nimport Spinner from '../../components/Spinner/Spinner';\nimport {connect} from 'react-redux';\n\nconst GetTime = props => {\n    const [hour, setHour] = useState('');\n    const [date, setDate] = useState('');\n\n    const coord = props.lat+','+props.lon;\n    const cdate = new Date();\n    const timestamp = (cdate.getTime()/1000) + (cdate.getTimezoneOffset()*60);\n    //Google Timezone API Key\n    const apiKey = 'AIzaSyCbHz8Khd-do7lncgtfIn_JL6rA_YfcJNw';\n    const url = 'https://maps.googleapis.com/maps/api/timezone/json?location='\n    +coord+'&timestamp='+timestamp+'&key='+apiKey;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await Axios(url);\n            const offsets = (response.data.dstOffset * 1000) + (response.data.rawOffset * 1000);\n            let localdate = new Date(timestamp*1000 + offsets);\n            setHour(localdate.getHours());\n            setDate(localdate.getDate());\n            props.onHour(localdate.getHours());\n            props.onTime(localdate.toTimeString().substring(0,8));\n            \n        }\n        fetchData();\n                \n            }, [])\n    \n    \n    return (hour !=='' && date !=='' ? \n    <Card class = {['Card',props.daytype.toLowerCase()].join(' ')} text = {props.text} hour = {hour} date={date} /> : <Spinner />)\n}\nconst mapStateToProps = state => {\n    return {\n        daytype: state.text\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onHour: (hour) => dispatch({type: 'HOUR', val: hour}),\n        onTime: (time) => dispatch({type: 'TIME', val: time})\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(GetTime);","import React, {Component} from 'react';\nimport './Search.css';\nimport NavigationItem from '../../components/Navigation/NavigationItem/NavigationItem';\nimport List from '../../components/List/List';\nimport Axios from 'axios';\nimport _ from 'lodash';\nimport BigCard from '../../components/BigCard/BigCard';\nimport Card from '../../components/Card/Card';\nimport cityTimezones from 'city-timezones';\nimport GetTime from '../../components/GetTime/GetTime';\nimport {connect} from 'react-redux';\nimport Spinner from '../../components/Spinner/Spinner';\nimport { async } from 'q';\n\nclass Search extends Component {\n    state = {\n        text: \"\",\n        results: {},\n        touched: false,\n        submit: false,\n        firstrun: false\n    }\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const apiKey = '23ae9231000a3683d24bd17fbf104be3';\n            const url = 'https://api.openweathermap.org/data/2.5/weather?lat='+\n            position.coords.latitude+'&lon='+position.coords.longitude+'&units=metric'+'&appid='+apiKey \n            this.fetchData(url,true);\n            //console.log(position.coords.latitude,position.coords.longitude);\n        })\n    }\n    componentWillMount() {\n        this.run = _.debounce((url) => {this.fetchData(url)}, 1000);\n    }\n    fetchData = (url,firstrun) => {\n        let results = {};\n        Axios.get(url).then(\n            response => {\n                results = {\n                    lat: response.data.coord.lat,\n                    lon: response.data.coord.lon,\n                    temp_min: response.data.main.temp_min,\n                    temp_max: response.data.main.temp_max,\n                    name: response.data.name,\n                    icon: 'https://openweathermap.org/img/w/'+\n                            response.data.weather[0].icon+'.png',\n                    temp: response.data.main.temp,\n                    desc: response.data.weather[0].description,\n                    humidity: response.data.main.humidity,\n                    wind_speed: response.data.wind.speed\n                }\n                this.setState({results: results});\n                this.setState({text: results.name, touched: true, submit: false, firstrun: firstrun});\n            }\n        ).catch(err => {\n            if(err.toString().includes(\"404\")) {\n                alert(\"The location could not be found! Please try again.\");\n            }\n            else {\n                alert(err);\n            }\n        })\n    }   \n    onChangedHandler = (event) => {\n        event.preventDefault();\n        event.persist();\n        this.setState({firstrun: false, touched: false});\n        if(event.target.value !== \"\" || !this.state.touched) {\n            //const date = new Date(0);\n            //const time = date.getHours();\n            //console.log(time);\n            //const time = cityTimezones.lookupViaCity('Bangkok');\n            //const t = date.toLocaleString('en-AU', {hour: '2-digit',   hour12: false, timeZone: time[0].timezone })\n            //console.log(t);\n            //console.log(time[0].timezone);\n        \n        const apiKey = '23ae9231000a3683d24bd17fbf104be3';\n        const url = 'https://api.openweathermap.org/data/2.5/weather?q='+event.target.value+'&units=metric'+'&appid='+apiKey \n        this.run(url, false);\n        }\n        \n        //this.setState({text: event.target.value});\n        \n    }\n\n    onTouchedHandler = () => {\n        this.setState({touched: true, submit: true});\n    }\n\n    onSubmitHandler = () => {\n        this.setState({submit: true});\n    }\n\n    render() {\n        return (\n        <React.Fragment>\n            <div className={this.props.class}>\n                <input placeholder=\"Enter a city name\" onChange={this.onChangedHandler}></input>\n                <NavigationItem label=\"Submit\" daytype={this.props.daytype} type=\"Submit\" clicked={this.onSubmitHandler}/>\n                <div className=\"about\" type=\"About\">\n                    <NavigationItem daytype={this.props.daytype} label=\"About Me\"/>\n                </div>\n            </div>\n            {this.state.text !== \"\" && !this.state.touched && !this.state.firstrun || \n            this.state.text !== \"\" && !this.state.submit && !this.state.firstrun ? \n            <List text={this.state.text} clicked={this.onTouchedHandler}/> : null}\n            {this.state.submit && this.state.touched || \n                this.state.firstrun && this.state.touched ? <BigCard class={['BigCard',this.props.daytype.toLowerCase()].join(' ')} results={this.state.results}/> : null}\n            {this.state.touched && this.state.submit || \n                this.state.firstrun && this.state.touched ? <GetTime lat={this.state.results.lat} lon={this.state.results.lon} text={this.state.text}/> : null}\n        </React.Fragment>\n        )\n    }\n} \n\nconst mapStateToProps = state => {\n    return {\n        daytype: state.text\n    }\n}\n\nexport default connect(mapStateToProps)(Search);","import React from 'react';\nimport './Footer.css';\nimport Img from '../../assets/Octocat.png';\n\nconst footer = props => (\n    <div className={props.class}>\n        <label>&copy;2019 Rasikh92</label>\n        <a href=\"https://github.com/rasikh92/React_GitUsersApp\"\n                target=\"blank\">\n            <img className=\"img\" src={Img} alt=\"Github Link\">\n            </img>\n        </a>\n    </div>\n)\n\nexport default footer;","import React, {Component} from 'react';\nimport './Home.css'\nimport Jumbotron from '../../components/Jumbotron/Jumbotron';\nimport Search from '../../containers/Search/Search';\nimport Footer from '../../components/Footer/Footer';\nimport {connect} from 'react-redux';\n\n\nclass Home extends Component {\n    render() {\n        return (\n        <React.Fragment>\n            <Jumbotron class={['Jumbotron',this.props.daytype.toLowerCase()].join(' ')} time={this.props.time} />\n            <Search class={['Search',this.props.daytype.toLowerCase()].join(' ')}/>\n            <Footer class={['Footer',this.props.daytype.toLowerCase()].join(' ')}/>\n        </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        daytype: state.text,\n        time: state.time\n    }\n}\n\nexport default connect(mapStateToProps)(Home);","import React, {Component} from 'react';\nimport './About.css';\nimport NavigationItem from '../../components/Navigation/NavigationItem/NavigationItem';\nimport Footer from '../../components/Footer/Footer';\nimport {connect} from 'react-redux';\n\nclass About extends Component {\n    render() {\n        return (\n        <React.Fragment>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <NavigationItem daytype={this.props.daytype} label=\"Home\" type=\"Home\" />\n\n            <div className={this.props.class}>\n                <p>This app is designed to display current local weather\n                as well as provide with search option to locate any other\n                location. It uses an OpenWeatherMap API to display current \n                and 5-day forecast.</p>\n            </div>\n\n            <Footer class={['Footer',this.props.daytype.toLowerCase()].join(' ')}/>\n        </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        daytype: state.text\n    }\n}\n\nexport default connect(mapStateToProps)(About);","import React from 'react';\nimport './App.css';\nimport Home from './containers/Home/Home';\nimport {connect} from 'react-redux';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport About from './containers/About/About';\n\nconst App = props => {\n  return (\n    <div className=\"App\">\n      <header className={[\"App-header\",props.daytype].join(' ')}> \n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" render = {() => <About class={['About',props.daytype.toLowerCase()].join(' ')}/>} />\n          </Switch>\n      </header>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    daytype: state.text\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    text: \"\",\n    time: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'HOUR':\n        let daytype = null;\n        //logic for morning, day, evening and night\n            if (action.val > 4 && action.val < 12) {\n                daytype = \"Morning\";\n            }\n            else if(action.val >= 12 && action.val <= 17) {\n                daytype = \"Afternoon\";\n            }\n            else if(action.val >= 17 && action.val <= 19) {\n                daytype = \"Evening\";\n            }\n            else {\n                daytype = \"Night\";\n            }\n        return {\n            ...state,\n            text: daytype\n        }\n        case 'TIME':\n        return {\n            ...state,\n            time: action.val\n        }\n        default:\n        return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './store/reducer';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst store = createStore(reducer);\n\nReactDOM.render(<Provider store={store}>\n                    <BrowserRouter basename=\"src\"><App /></BrowserRouter>\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Octocat.14f7c70e.png\";"],"sourceRoot":""}